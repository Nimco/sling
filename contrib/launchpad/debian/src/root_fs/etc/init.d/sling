#!/bin/bash
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

### BEGIN INIT INFO
# Provides:          sling
# Required-Start:    $remote_fs $syslog $named
# Required-Stop:     $remote_fs $syslog $named
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start sling at boot time
# Description:       Enable service provided by sling.
### END INIT INFO

. /etc/profile
export FANCYTTY=true
. /lib/lsb/init-functions
export PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin
SLING_DEFAULTS=/etc/default/sling
if [ -r $SLING_DEFAULTS ] ; then
	. $SLING_DEFAULTS
else
	log_failure_msg "Missing $SLING_DEFAULTS file, cannot read env settings."
	exit -1
fi

#
# Usage
#
function usage () {
	log_warning_msg "Purpose: Stop/Start sling"
	log_warning_msg "Usage  : $0 { stop | start | restart }"
}

[ "$DEBUG" ] && set -x

NAME=sling
PID=/var/run/${NAME}.pid
DAEMON=$(which java)


[ -r $CRANKSTART_ENV ] && . $CRANKSTART_ENV
CRANKSTART_JAR=${M2REPO}/crankstart.jar

# running()
# {
# 	local PID=$(cat "$1" 2>/dev/null) || return 1
# 	kill -0 "$PID" 2>/dev/null
# }

# status()
# {
# 	if running "$PID"
# 		then
# 		echo "OK"
# 	else
# 		echo "FAILED"
# 	fi
# }



#
# Stop current sling instance
#
function stop () {
	killproc -p $PID $DAEMON TERM
#	start-stop-daemon --stop --chuid $SLING_USER:$SLING_GROUP --pidfile $PID --chdir $SLING_HOME --startas "./$NAME" --signal TERM
}

#
# Start batch job scheduler
#
function start () {

	log_daemon_msg "Starting sling serices" "sling"
	echo M2REPO=$M2REPO
	if start-stop-daemon --start \
		--chdir "$SLING_HOME" \
		--chuid $SLING_USER \
		--pidfile "$PID" \
		--make-pidfile \
		--background \
		--startas $(which java) \
		-- \
		${JAVA_ARGS} \
		${MVN_OPTS} \
		-jar ${CRANKSTART_JAR} \
		${SLING_CFG}/target/${RUNMODE}.txt
		>>$LOG_FILE 2>&1 &
	then
		sleep 3s
		status
	fi
	log_end_msg 0

}

if test -z "$1"; then
	usage
	exit
fi

case $1 in
	start)
		start
		;;
	stop)
		stop
		;;
	restart)
		if [ -f $PID ] ; then
			stop
#			while ps --pid $(cat $PID) >/dev/null ; do
			while pidofproc -p $PID $DAEMON ; do
				sleep 1
			done
		fi
		start
	;;
	status)
		# if [ $(status) == "OK" ] ; then
		# 	exit 0
		# else
		# 	exit 1
		# fi
		status_of_proc -p PID $DAEMON
		;;
	*)
		echo "Unknown parameter: $1"
		usage
		;;
esac


# end_of_file
